조건은 아래와 같다
1. 입력이 빈 문자열인 경우, 빈 문자열을 반환합니다. 
2. 문자열 w를 두 "균형잡힌 괄호 문자열" u, v로 분리합니다. 단, u는 "균형잡힌 괄호 문자열"로 더 이상 분리할 수 없어야 하며, v는 빈 문자열이 될 수 있습니다. 
3. 문자열 u가 "올바른 괄호 문자열" 이라면 문자열 v에 대해 1단계부터 다시 수행합니다. 
  3-1. 수행한 결과 문자열을 u에 이어 붙인 후 반환합니다. 
4. 문자열 u가 "올바른 괄호 문자열"이 아니라면 아래 과정을 수행합니다. 
  4-1. 빈 문자열에 첫 번째 문자로 '('를 붙입니다. 
  4-2. 문자열 v에 대해 1단계부터 재귀적으로 수행한 결과 문자열을 이어 붙입니다. 
  4-3. ')'를 다시 붙입니다. 
  4-4. u의 첫 번째와 마지막 문자를 제거하고, 나머지 문자열의 괄호 방향을 뒤집어서 뒤에 붙입니다. 
  4-5. 생성된 문자열을 반환합니다.

이 문제에서 가장 필요한 것은 "재귀"이다.
상태값은 "("와 ")"의 개수가 같은 "균형잡힌 괄호 문자열"과 배치가 올바른 "올바른 괄호 문자열" 인지 확인할 수 있게 해야한다.

is_balence: "균형잡힌 괄호 문자열"은 "("의 개수를 left, ")"의 개수를 right일 때 해당 값이 같으면 true, 그렇지 않으면 false로 두고
is_valid: "올바른 괄호 문자열"은 문자열의 처음이 "("이고 문자열의 마지막이 ")"일 때 true, 그렇지 않으면 false로 둔다

is_balence가 true가 나올 때까지 반복을 하고 입력받은 문자열을 스캔하면서 체크를 한 후,
끊긴 index 기준으로 나눠서 전자를 u, 후자를 v로 둔다

u는 "is_valid"에 따라 나눠지고, v는 solution 함수를 다시 재귀한다

u가 is_valid이면 answer가 u + v가 되고
그렇지 않으면 조건에 따라 v는 "(" + v + ")"가 되고, u는 첫 문자와 마지막 문자가 제거된 후 남은 문자를 역전한 값이 된다
